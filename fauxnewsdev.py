def generateNews():
  # -*- coding: utf-8 -*-
  """fauxNewsDev.ipynb

  Automatically generated by Colaboratory.

  Original file is located at
      https://colab.research.google.com/drive/1hZFV9VwUg_-5xtIvtecP5IcsAKKEaIwu
  """

  # imports

  from xlrd import open_workbook
  import numpy 
  import pandas as pd

  # onion dataset
  df = pd.read_csv('cleaned_onion.csv') #data is now in panda dataframe
  df = df.dropna()
  print("--- Onion Dataset imported from Google Drive! ---")

  loopDetector = 0

  while loopDetector == 0:

    requestedTags = input("Please enter tags, separated by comma: ") 

    requestedTags = requestedTags.split(',')
    print(requestedTags)

    # filtering the dataframe by input tags
    # only works for exact matches df_filtered = df[~df['tags'].isin(requestedTags)]
    df_filtered = pd.DataFrame()
    if requestedTags == None:
      pass
    else:
      for tags in requestedTags:
        df_filtered = df_filtered.append(df[df['tags'].str.contains(tags.title())])
        df_filtered = df_filtered.append(df[df['tags'].str.contains(tags.lower())])
        df_filtered = df_filtered.append(df[df['title'].str.contains(tags.lower())])
        df_filtered = df_filtered.append(df[df['title'].str.contains(tags.title())])
    df_filtered = df_filtered.drop_duplicates(keep='first')
    matches = len(df_filtered.index)
    print(str(matches) + " matches")
    loopDetector = int(input("Is that enough matches? 1 for yes, 0 for no and to enter new tags."))
  print('--- Filtered dataset generated! ---')

  # GENERATE FREQ TABLE
  freqTable = pd.DataFrame(columns=['start', 'next'])

  for index, row in df_filtered.iterrows():
      titleList = row['title'].split()
      titleList.insert(0,"~start~")
      titleList.append("~end~")
      for title in range(len(titleList)-1):
        freqTable = freqTable.append({'start': titleList[title], 'next' : titleList[title+1]}, ignore_index=True)

       # freqTable.append()
  print("--- Frequency table generated! ---")

  # *** Generate Markov Model ***

  def markovGen(df):
    sentence = ''
    #get first word
    word = '~start~'
    detector = 0
    while detector == 0:
      newdf = df.loc[df['start'] == word]
      newdf = newdf.reset_index()

      index = numpy.random.randint(0,len(newdf.index))
      word = newdf.loc[index]["next"]
      if word == "~end~":
        detector = 1
        break
      sentence = sentence + ' ' + newdf.loc[index]["next"]
    print(sentence)


    #get all the other words
    
    #detector = 0
   # while detector == 0:
    #  newdf = df.loc[df['start'] == '~start~']
     
    #that next word becomes the start word for the data to look through what follows it in other headlines and use that
    
    #it needs some way to end unless the method would naturally end
  for i in range(10):
    markovGen(freqTable)
generateNews()
